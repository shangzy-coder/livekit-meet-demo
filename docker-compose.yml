# version: '3.8'  # 移除过时的 version 字段

services:
  # Redis - 必需的消息队列，用于LiveKit Server和Egress通信
  redis:
    image: redis:7-alpine
    container_name: livekit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - livekit-network

  livekit-server:
    image: livekit/livekit-server:latest
    container_name: livekit-server
    ports:
      - "7880:7880"      # WebSocket/HTTP API (更新端口)
      - "7881:7881"      # TCP for WebRTC
      - "50000-50100:50000-50100/udp"  # UDP range for WebRTC media (统一端口范围)
    volumes:
      - ./livekit-config/livekit.yaml:/etc/livekit.yaml:ro
    environment:
      - LIVEKIT_CONFIG_FILE=/etc/livekit.yaml
    command: ["--config", "/etc/livekit.yaml"]
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - livekit-network

  # LiveKit Egress - 录制服务
  livekit-egress:
    image: livekit/egress:latest
    container_name: livekit-egress
    restart: unless-stopped
    ports:
      - "8080:8080"   # Health check port
      - "9090:9090"   # Prometheus metrics
    volumes:
      - ./livekit-config/egress-config.yaml:/etc/egress.yaml:ro
      - ./recordings:/out  # 本地录制文件存储
    environment:
      - EGRESS_CONFIG_FILE=/etc/egress.yaml
    depends_on:
      - redis
      - livekit-server
      - minio
    networks:
      - livekit-network
    # Chrome需要特殊权限
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    # 添加额外的主机映射，确保可以访问宿主机
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # MinIO - S3兼容的对象存储，用于保存录制文件
  minio:
    image: minio/minio:latest
    container_name: livekit-minio
    restart: unless-stopped
    ports:
      - "9000:9000"   # API端口
      - "9001:9001"   # Web控制台端口
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=livekit-recordings:public
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - livekit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  redis_data:
  minio_data:

networks:
  livekit-network:
    driver: bridge
